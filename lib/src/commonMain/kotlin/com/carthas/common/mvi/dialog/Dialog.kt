package com.carthas.common.mvi.dialog

import androidx.compose.animation.EnterTransition
import androidx.compose.animation.ExitTransition
import androidx.compose.runtime.Composable
import androidx.compose.runtime.Immutable
import kotlin.time.Duration
import kotlin.uuid.ExperimentalUuidApi
import kotlin.uuid.Uuid


/**
 * Represents a dialog that can be displayed on the screen with customizable transitions,
 * dismissal behavior, and content.
 *
 * This data class provides the necessary parameters to define a dialog's behavior and appearance:
 * - Transition effects for both its appearance and disappearance using [EnterTransition] and [ExitTransition].
 * - Control over whether it should dismiss when clicking outside the dialog.
 * - A composable content lambda for rendering the dialog's UI.
 *
 * Instances of this class are typically managed using [DialogManager] and rendered in a [DialogHost].
 *
 * @property key A unique identifier for the dialog, generated by default using [Uuid].
 * @property enterTransition Defines the animation used when the dialog appears.
 * @property exitTransition Defines the animation used when the dialog disappears.
 * @property dismissDelay Specifies the delay before the dialog is fully dismissed after initiating dismissal.
 * @property dismissOnClickOutside Indicates whether the dialog should be dismissed when the user clicks outside its boundary.
 * @property content A composable lambda defining the visual content of the dialog.
 */
@Immutable
@OptIn(ExperimentalUuidApi::class)
data class Dialog(
    val key: String = Uuid.random().toString(),
    val enterTransition: EnterTransition = EnterTransition.None,
    val exitTransition: ExitTransition = ExitTransition.None,
    val dismissDelay: Duration = Duration.ZERO,
    val dismissOnClickOutside: Boolean = true,
    val content: @Composable () -> Unit,
)